<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd">
<!-- 
MonitorViewer viewer = new MonitorViewer();
		Recorder recorder = new Recorder();
		viewer.setRecorder(recorder);
 -->
<!--  <bean id="recorder" class="DI_Annotation_01_EX.Recorder"></bean>
<bean id="viewer" class="DI_Annotation_01_EX.MonitorViewer">
	<property name="recorder">
		<ref bean="recorder"/>
	</property>
</bean>  -->
<context:annotation-config/>
<context:component-scan base-package="kr.or.bit.commons"></context:component-scan>
<!--  component 스캔해서 빈 객체를 만든다 
밑에 작업도 필요없다  -->
 <bean id="recorder" class="DI_Annotation_01.Recorder"></bean>
 <bean id="viewer" class="DI_Annotation_01.MonitorViewer"></bean>
 
 <bean id="a" class="DI_Annotation_01.MonitorViewer"></bean>
 <bean id="b" class="DI_Annotation_01.MonitorViewer"></bean>
 <bean id="c" class="DI_Annotation_01.MonitorViewer"></bean>
</beans>
<!--  @Autowired > Type기반
목적 : 의존관계를 자동설정할 때 사용하며 [타입을 이용]하여 의존하는 객체를 삽입해 준다. 
그러므로 (IOC Container) 해당 타입의 빈객체가 존재하지 않거나 또는 2개 이상 존재할 경우 
스프링은 예외를 발생시키게 된다. 
 설정 위치 : 생성자, 필드. 메소드 (굳이 setter 메소드가 아니어도 된다)
 
 **@Autowired 적용되기 위한 선행 작업 
 
AutowiredAnnotationBeanPostProcessor 클래스가 빈 객체로 등록 
<bean id="" class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor">
이 객체가 있어야지만 autowire 어노테이션을 사용할 수 있다 
어노테이션에 필요한 빈 객체를 한번에 등록시킨다 
context:annotation-config 
> annotation 사용에 필요한 모든 클래스를 한방에 빈 객체로 생성한다 
단점 : 쓰지 않는 기능도 등록한다  

@Autowired 정상 동작하지 않는 경우 
1. injection 되는 타입은 bean  객체가 ioc 컨테이너 안에 없는 경우 (exception) 

2. ioc 컨테이너 안에 같은 타입의 bean 객체가 여러개 존재하는 경우  
NoUniqueBeanDefinitionException

3. ioc 컨테이너 안에 같은 타입의 bean 객체가 여러개 존재하더라도 setter 함수의 파라미터 이름이 bean element의  id 값과 같으면  찾는다 
private Recorder recorder;
public void setRecorder(Recorder recorder)
원칙 ) @Resource (by name) 
resource 컨테이너 안에 아이디나 네임값으로 주입하는 것 

-->

